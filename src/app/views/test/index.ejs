<!doctype html>
<html>
    <meta name="viewport" content="user-scalable=no,initial-scale=1.0,maximum-scale=1.0,width=device-width,target-densitydpi=device-dpi">

    <!-- Jasmine -->
    <link rel="stylesheet" href="/test/css">

    <!-- Origin -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="http://code.createjs.com/easeljs-0.5.0.min.js"></script>
    <script src="/javascripts/lib/modernizr.min.js"></script>
    <script src="/javascripts/lib/tash-0.0.1-min.js"></script>
    <script src="/widgets/code"></script>
    <script src="/test/code"></script>
    <script src="/test/specs"></script>

    <body>
        <div style="position:absolute; left: -99999px">
            <div id="application-loader" class="loading"><div class="logo"></div></div>
            <header></header>
            <section id="appView" style="display: none"><div id="appViewWrap"></div></section>
            <footer><ul class="tab-bar" style="display:none"></ul></footer>
        </div>


        <!-- Test Runner -->
        <script type="text/javascript">
                /*
                beforeEach(function () {
                    spyOn($, 'ajax');
                    spyOn(console, 'error').andCallThrough();
                    spyOn(console, 'log').andCallThrough();
                    $('#modal-mask').remove();
                    $('section#dialog').remove()
                });

                afterEach(function(){
                    if($ && $.ajax){
                        $.ajax.reset();
                    }
                });
                */
                
                var jasmineEnv = jasmine.getEnv();
                jasmineEnv.updateInterval = 1000;

                var htmlReporter = new jasmine.HtmlReporter();
                var junitReporter = new jasmine.PhantomJSReporter();
                window.tests = new jasmine.JsApiReporter();

                window.tests.log = function (str) {
                    console.log("-------> ", str);
                }

                jasmineEnv.addReporter(htmlReporter);
                jasmineEnv.addReporter(junitReporter);
                jasmineEnv.addReporter(window.tests);

                jasmineEnv.specFilter = function(spec) {
                    return htmlReporter.specFilter(spec);
                };

                jasmineEnv.execute();

                window.onerror = function() {
                    if (!htmlReporter.views) { return false; }
                    var args = arguments;

                    describe("Global Error:", function() {
                        it("A " + args[0] + " error occured", function() {
                            expect(args).toEqual([]);
                        });
                    });
                    return false;
                };
        </script>